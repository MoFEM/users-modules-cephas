/*! \page basic_tutorials_poisson_nonhomogeneous SCL-2: Poisson's equation (non-homogeneous BC)

\note Prerequisite of this tutorial is \ref basic_tutorials_poisson_homogeneous

<br>

\note Intended learning outcome:
- idea of Boundary element in MoFEM and how to use it
- handling of non-homogeneous boundary condition using least square approximation in MoFEM
- process of implementing additional User Data Operators (UDOs) to calculate and assemble non-homogeneous boundary condition
- practising on how to **push** the developed UDOs to the *Pipeline*


\tableofcontents

\section basic_tutorials_poisson_nonhomogeneous_introduction Introduction



\section basic_tutorials_poisson_nonhomogeneous_plain_program Plain program 


The plain program for both the implementation of the UDOs (\c *.hpp) and the
main program (\c *.cpp) are as follows

\subsection basic_tutorials_poisson_nonhomogeneous_impl_udo Implementation of User Data Operators (*.hpp)

\include poisson_2d_nonhomogeneous.hpp

\subsection basic_tutorials_poisson_nonhomogeneous_impl_main Implementation of the main program (*.cpp) 

\include poisson_2d_nonhomogeneous.cpp




*/