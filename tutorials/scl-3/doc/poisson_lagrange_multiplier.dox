/*! \page basic_tutorials_poisson_lagrange_multiplier SCL-3: Poisson's equation (Lagrange multiplier)

\tableofcontents

\note Prerequisite of this tutorial is \ref basic_tutorials_poisson_nonhomogeneous

<br>

\note Intended learning outcome:
- an alternative way to handle non-homogeneous boundary condition using an additional field of Lagrange multipliers
- idea of PETSc [PCFIELDSPLIT](http://www.mcs.anl.gov/petsc/petsc-current/docs/manualpages/PC/PCFIELDSPLIT.html) block solver and how to implement it
- adding the additional field to the output file (postprocessing)


\tableofcontents

\section basic_tutorials_poisson_lagrange_multiplier_introduction Introduction



\section basic_tutorials_poisson_lagrange_multiplier_plain_program Plain program 


The plain program for both the implementation of the UDOs (\c *.hpp) and the
main program (\c *.cpp) are as follows

\subsection basic_tutorials_poisson_lagrange_multiplier_impl_udo Implementation of User Data Operators (*.hpp)

\include poisson_2d_lagrange_multiplier.hpp

\subsection basic_tutorials_poisson_lagrange_multiplier_impl_main Implementation of the main program (*.cpp) 

\include poisson_2d_lagrange_multiplier.cpp



*/